[{"question":"Конструирование программного обеспечения – это:","answer":"создание работающего программного обеспечения с привлечением методов верификации, кодирования и тестирования программ;  "},{"question":"Область знаний «Конструирование программного обеспечения» включает следующие разделы:","answer":"снижение сложности,  предупреждение отклонений от стиля, структуризация проверок, использование внешних стандартов;"},{"question":"Уменьшение сложности в конструировании программного обеспечения  достигается при:","answer":"создании   простого   и легко читаемого кода для придания большей значимости этого кода, простоте тестирования, производительности и удовлетворению заданным критериям; "},{"question":"Что относится к стратегиям проектирования программного обеспечения?","answer":"проектирование “сверху-вниз”, “снизу-вверх”, абстрагирование, использование паттернов и каркасов;"},{"question":"Что относится к методам проектирования программного обеспечения ?","answer":"функционально - ориентированные, структурные, объектно-ориентированные методы, базирующиеся на структурном и объектном анализе, структурных картах, диаграммах потоков данных."},{"question":"Одним из важнейших инструментов проектирования архитектуры  является паттерн – типовой конструктивный элемент программного обеспечения. Что задает паттерн?","answer":"паттерн задает взаимодействие объектов (компонентов) проектируемой системы, а также  роли и ответственности исполнителей;  "},{"question":"Одним из важнейших инструментов проектирования архитектуры программного обеспечения  является паттерн. Каким не может быть паттерн?","answer":"конструктивным; "},{"question":"Что не относится к нотациям проектирования программного обеспечения?","answer":"операторы цикла, ветвления, выбора и последовательности;"},{"question":"Тестирование программного обеспечения – это:","answer":"процесс проверки готовой программы в статике и в динамике, путем прогона конечного набора корректных и не корректных тестовых данных; "},{"question":"Что такое сопровождение программного обеспечения?","answer":"Сопровождение программного обеспечения – это совокупность действий по обеспечению работы программного обеспечения, а также, по внесению  изменений в случае обнаружения ошибок в процессе эксплуатации и  по адаптации программного обеспечения к новой среде функционирования;"},{"question":"Что не входит в процесс сопровождения программного обеспечения?","answer":"оптимизация кода с применением аспектно - ориентированного программирования;"},{"question":"Конфигурация программного обеспечения  включает:","answer":" набор функциональных и технических характеристик программного обеспечения, заданных в технической документации и реализованных в готовом продукте;"},{"question":"На что делает акцент инженерия программирования?","answer":"на принципы, методы и подходы к управлению проектом, конфигурацией и качеством программного обеспечения;"},{"question":"Программное обеспечение - это?","answer":"компьютерные программы  и соответствующая документация;"},{"question":"Что отображает модель TO-BE  по сравнению с моделью AS-IS?","answer":"интегрирует перспективные предложения сотрудников и менеджеров предприятия и формирует перспективное видение новых рациональных технологий работы предприятия, в соответствии с требованиями рынка и развития бизнеса;"},{"question":"Что не  входит в решения начального этапа проектирования программного обеспечения?","answer":"принятие решений по выбору либо визуального проектирования, либо событийного программирования; "},{"question":"Объектно-ориентированный подход к разработке систем ориентирован  в большей степени  на:","answer":"данные;"},{"question":"Что не входит в перечень основных принципов объектной модели?","answer":"набор правил по определению и документированию объектов;"},{"question":"Объект обладает:","answer":"состоянием, поведением и идентичностью;"},{"question":"Сообщение,  посылаемое  исходным объектом целевому объекту, является:","answer":"именем операции класса целевого объекта; "},{"question":"В сценариях взаимодействия объектов выделяются объекты-клиенты и объекты - сервера. Укажите невозможные виды операций объекта-клиента  над  объектом-сервером? ","answer":"конструктор и деструктор;"},{"question":"В сценариях взаимодействия объектов выделяются объекты-клиенты и объекты - сервера. Укажите способ, который не обеспечивает видимость таких объектов: ","answer":"клиент в качестве локального объекта в теле операции сервера;"},{"question":"Агрегация, как специализированный частный случай ассоциации, описывает отношения:","answer":"целого и частного;"},{"question":"Объект, являющийся атрибутом другого объекта, имеет связь со своим агрегатом:","answer":"по значению;"},{"question":"Отношение «композиция» между классами - это:","answer":"когда целое физически содержит часть;"},{"question":"Какое отношение должно быть между классами «Многоугольник»  и  «Вершина», при котором изменения многоугольника  влекут за собой изменения вершин этого многоугольника.","answer":"агрегация;"},{"question":"Какое отношение должно быть между классами «Многоугольник» и «Графический объект», если графический объект содержит специфические атрибуты многоугольника и не может быть изменен?","answer":"композиция;"},{"question":"Свойства класса представляют собой единое понятие, воплощающееся:","answer":"в атрибутах и в ассоциациях;"},{"question":"Если класс определяет типы  атрибутов, то объекты содержат:","answer":"значения атрибутов;"},{"question":"Какая из представленных характеристик атрибута класса снимает ограничения на модификацию значения атрибута? ","answer":"changeable;"},{"question":"Значительная часть информации, которую можно указать в атрибуте класса, появляется:","answer":"в ассоциациях;"},{"question":"Ролевые имена на ассоциативной связи между целевым и исходным классами используются:","answer":"для перемещения к объекту целевого класса из исходного;"},{"question":"ля улучшения понимания при взаимодействии двух классов, часто используются следующие имена: «has»(иметь),  «is related to»(связан с), «is part of»(является частью). С каким типом отношения между классами используются перечисленные имена?  ","answer":"ассоциация;"},{"question":"Класс ассоциаций (ассоциативный класс) рассматривается как:","answer":"класс  со свойствами ассоциаций или как ассоциации со свойствами классов;"},{"question":"Какой  уровень видимости метода класса обозначает метка видимости # ?","answer":"защищенный (protected);"},{"question":"В параметрах метода класса “направление”  обозначает параметр, который является:","answer":"входным и выходным;"},{"question":"Какая из представленных характеристик операций класса определяет  не  полиморфную операцию?","answer":"leaf;"},{"question":"Какая из представленных характеристик операций класса гарантирует, что при вызове такой операции объект, в любой момент, будет выполнять только один поток?","answer":"sequential;"},{"question":"Методы класса могут иметь параметры – направления. Какое направление обозначает выходной параметр, который может быть изменен, чтобы передать информацию вызвавшей процедуре?","answer":"out; "},{"question":"Какой из стереотипов класса описывает множество операций, определяющих, что может делать класс?","answer":"«interface»;"},{"question":"Какой из стереотипов класса определяет событие, которое может быть возбуждено или перехвачено операцией?","answer":"«exception»;"},{"question":"Какой из стереотипов класса обеспечивает взаимодействие между окружающей средой и внутренними элементами системы? ","answer":"«boundary»;"},{"question":"Какой из стереотипов класса используется для моделирования данных и поведения класса с длинным жизненным циклом?","answer":"«entity»;"},{"question":"Какой из стереотипов класса служит для моделирования последовательного  поведения одного или нескольких вариантов использования и координации событий, реализующих заложенное в них поведение?","answer":"«control»;  "},{"question":"Какой из стереотипов определяет класс, для которого областью действия всех атрибутов и операций является сам класс?","answer":"«utility»;"},{"question":"Как называется отношение класса с самим собой?","answer":"рефлексивная ассоциация;"},{"question":"С помощью  каких преимущественно связей   проектируется структура проекта?","answer":"ассоциативных связей;"},{"question":"С точки зрения программного обеспечения, очевидная интерпретация класса  наследника  заключается  в том,  что:","answer":"подкласс наследует всю функциональность и все взаимосвязи своего суперкласса, а также возможность переопределения методов родителя;"},{"question":"Отношение «Зависимость» между классами является:","answer":"семантическим отношением или  отношением использования между  классом - клиент и классом - сервер, при котором, изменение  сервера  отражается на семантике  клиента;"},{"question":"С помощью какого типа отношений между классами реализуется ценное правило анализа проекта: «Строго разделять логику представления от логики предметной области, когда представление зависит от предметной области, но не наоборот» ?","answer":"зависимость;"},{"question":"Существует список стереотипов языка UML для отношения «Зависимость». Какой стереотип зависимости описывает вызов классом-источником метода класса-цели ?","answer":"«call»;"},{"question":"Существует список стереотипов языка UML для отношения «Зависимость». Какой стереотип зависимости разрешает классу-источнику иметь доступ к закрытым членам класса-цели ?","answer":"«permit»;"},{"question":"Существует список стереотипов языка UML для отношения «Зависимость». Какой стереотип зависимости применяется, когда класс-источник создает экземпляр класса-цели ?","answer":"«create»;"},{"question":"Существует список стереотипов языка UML для отношения «Зависимость». Какой стереотип зависимости используется для взаимосвязи моделей анализа и реализации, то есть, когда класс-источник может быть классом разработки, а класс-цель – соответствующим классом анализа ?","answer":"«refine»;"},{"question":"Существует список стереотипов языка UML для отношения «Зависимость». Какой из перечисленных стереотипов  зависимости не является абстрактной зависимостью ?","answer":"«instantiate»;"},{"question":"Существует список стереотипов языка UML для отношения «Зависимость». Какой стереотип зависимости  применяется для соединения друг с другом элементов модели, например, вариантов использования и их реализации, по мере развития этой модели ?","answer":"«trace»;"},{"question":"Существует список стереотипов языка UML для отношения «Зависимость». Какой стереотип зависимости  является обобщенной формой связи, при которой классу-источнику просто необходимо завершение одного из действий  над классом-целью ?","answer":"«use»;"},{"question":"Что такое «объектная декомпозиция»?","answer":"процесс разбиения предметной области на части, соответствующие классам и объектам предметной области;"},{"question":"Какой смысл носит тип отношения между классами, изображаемый стрелкой, с полым треугольником на одном конце ?","answer":"наследование;"},{"question":"Что такое класс, с точки зрения объектно-ориентированного программирования?","answer":"пользовательский  тип  данных;"},{"question":"Что такое «объектно-ориентированный анализ»?","answer":"метод анализа, согласно которому требования рассматриваются с точки зрения классов и объектов обнаруженных в предметной области;"},{"question":"Поведение объектов характеризуется:","answer":"набором  реакций объекта на получаемые сообщения, при этом  каждая реакция  зависит от состояния объекта;"},{"question":"Что такое UML?","answer":" универсальный язык визуализации, спецификации, конструирования и документирования программных и информационных систем;"},{"question":"Конечной целью применения языка объектного моделирования  UML является получение диаграммы:","answer":"классов;"},{"question":"Какая из диаграмм языка UML  показывает состояния объектов и условия переходов их  из  одного состояния в другое?","answer":"диаграмма состояний объектов;"},{"question":"Какой смысл носит тип отношения между классами, изображаемый стрелкой, с полым треугольником на одном конце ?","answer":"отношение наследования;"},{"question":"Какой смысл носит тип отношения между классами, изображаемый  стрелкой    - - - - - > ?","answer":"отношение зависимость;"},{"question":"Что показывает диаграмма последовательности языка UML?","answer":"отображает сценарий  взаимодействия  объектов, в процессе выполнения инварианта использования;"},{"question":"Что показывает диаграмма деятельностей языка UML?","answer":"схему параллельных потоков управления процессами  решения задачи;"},{"question":"Как называется отношение между классами, изображаемое стрелкой  ←◊, с ромбиком на одном из концов ?","answer":"агрегация;"},{"question":"Какой смысл носит тип отношения между классами, изображаемый  обычной  стрелкой → ?","answer":"Ассоциация с навигацией"},{"question":"Что описывает документ «Описание инварианта использования», создаваемый на этапе анализа проекта?","answer":"инварианты использования системы, основной и альтернативные сценарии  поведения  системы, контракты, классы и визуализацию структуры проекта;"},{"question":"Объектно-ориентированный  подход  при   проектировании  программного обеспечения  не использует:","answer":"Диаграммы потоков  данных  - DFD;"},{"question":" Какими стандартами определяются  этапы  проектирования программной системы:","answer":"cтандартами  жизненного цикла программной системы;"},{"question":"Стандарты  жизненного  цикла  программных  систем  определяют:","answer":"процессы жизненного цикла и их соотношение;"},{"question":"Отношение,  при  котором  объект  специализированного  элемента (потомок)  может  быть  подставлен  вместо обобщенного элемента  (предка или родителя) - это:","answer":"обобщение;"},{"question":"Пояснительные  части   модели  на языке  UML - это:","answer":"аннотационные  сущности;"},{"question":"Статические  составляющие  языка UML - это:","answer":"структурные сущности; "},{"question":"Динамические составляющие  на языке UML - это:","answer":"поведенческие  сущности; "},{"question":"Физически  заменяемая часть системы, которая  соответствует  некоторому набору логических элементов   и обеспечивает   их  реализацию – это:","answer":"компонента;"},{"question":"Совокупность  ролей  и  других  элементов,  которые  работая совместно,  производят  некоторый  кооперативный  эффект - это:","answer":"кооперация;"},{"question":"Отношение,  добавляющее  поведение  к  исходному   варианту использования – это:","answer":"расширение;"},{"question":"Совокупность  операций, которые определяют сервис (набор услуг), предоставляемый  классом  или  компонентом – это:","answer":"интерфейс;"},{"question":"Структурное отношение, описывающее семантическую связь между классами – это:","answer":"ассоциация;"},{"question":"Семантическое   отношение  между двумя  сущностями,  при  которой  изменение  одной  из  них, независимой, может повлиять на семантику другой, зависимой – это:","answer":"зависимость;"},{"question":"Форма  агрегирования,  в  которой  целое  владеет  своими частями, имеющими   одинаковое   время   жизни – это:","answer":"композиция; "},{"question":"Описание  совокупности  объектов  с  общими  атрибутами, операциями,  отношениями и семантикой – это:","answer":"класс;"},{"question":"Отношение  вариантов  использования,  в котором  один  вариант использования  обязательно  добавляется  внутрь   последовательности  поведения другого варианта  использования –  это:","answer":"включение;  "},{"question":"Описание  последовательности  выполняемых  системой  действий,  которая   производит   наблюдаемый  результат,  значимый для   какого-либо  актера – это:","answer":"вариант  использования;"},{"question":"Инструментом объектно-ориентированного анализа и проектирования  является:","answer":"Rational Rose;"},{"question":"Семантическое отношение между классификаторами, при котором   один   классификатор  определяет  «контракт», а  другой  гарантирует  его выполнение – это:","answer":"реализация;"},{"question":"Назовите основные стереотипы классов анализа  в нотации UML:","answer":"Boundary (граница), Entity (сущность), Control (управление); "},{"question":"Какие типы связей поддерживаются в диаграммах вариантов использования ?","answer":"коммуникации, использования, расширения, обобщения;"},{"question":"Назовите основные типы классов анализа:","answer":"пограничный  класс, класс - сущности, управляющий  класс;"},{"question":"Назовите  основные  элементы  диаграммы  последовательности  в нотации  языка UML:","answer":"объекты, сообщения, линия жизни, фокус управления, сообщения; "},{"question":"Отношение  «Ассоциация»  определяет семантическую связь между классами, которая реализуется:","answer":"с помощью дополнительного атрибута-ссылки на целевой класс, в составе своего объекта;"},{"question":"Каков  общепринятый способ использования методов включенного объекта ?","answer":"описать метод объемлющего класса, из которого можно вызвать метод включенного класса;"},{"question":"Отношение «Реализация» используется:","answer":"для отношения между интерфейсом и классом, реализующем интерфейс;"},{"question":"Наличие интерфейсов предоставляет возможность работать с объектами разных типов в той части системы, которая:","answer":"поддерживает соответствующий интерфейс;"},{"question":"Анализ функциональных требований направлен преимущественно:","answer":"на выявление классов – сущностей;"},{"question":"Выявление классов-сущностей, в первую очередь, связано с:","answer":"концептуальной моделью предметной области;"},{"question":"Отметьте наиболее характерный стиль проектирования  интерфейсных классов:","answer":"стиль на основе зрительного представления;"},{"question":"Лучшими источниками классов являются:","answer":"высокоуровневое описание задачи, низкоуровневые требования и экспертная оценка задачи и предметной области;"},{"question":"Одной из главных целей построения программных систем, на основе абстракций предметной области, является:","answer":"повторное использование компонент;"},{"question":"По мере проектирования системы строятся все более сложные модели за счет объединения классов в концептуально и семантически родственные группы. Что используется в языке  UML  для моделирования таких групп?","answer":"пакеты;"},{"question":"Какой  из вопросов  не  является   определяющим  для  утверждения  того, что данное  понятие предметной области является  классом ?","answer":"является ли данное понятие сущностью предметной области;"},{"question":"Сущности,  внешние  по  отношению  к  системе,  моделируются как:","answer":"акторы;"},{"question":"Каким  из перечисленных свойств не обязан обладать хорошо структурированный класс ?","answer":"«Являться  понятием  предметной области или области решения»;"},{"question":"На что раскладывается конкретный  механизм взаимодействия классов системы ?","answer":"на методы взаимодействующих классов;"},{"question":"Подход,  при  котором «Разработчик сначала полностью определяет поведение системы, затем определяются компоненты системы, которые отвечают за различные поведенческие акты, при этом основное внимание уделяется тому, кто инициирует и кто осуществляет  данные режимы», относится к:  ","answer":"определению классов системы;"},{"question":"Важным моментом в CRC-методике является определение ответственности  класса,  которая  заключается  в том, чтобы:","answer":"взять любой класс и сформулировать его разумно ограниченные обязанности;"},{"question":"Метод сценариев, при котором по очереди определяются и анализируются различные сценарии использования системы, относится к:","answer":"процессу начального  определения классов системы;"},{"question":"Использование   грамматического анализа естественного языкового описания системы применяется для: ","answer":"процесса  начального  определения классов системы;"},{"question":"Какие критерии не являются критериями  качества процесса выделения классов системы ?","answer":"примитивность и доступность  классов;"},{"question":"Какой механизм объектного проектирования помогает выгодно использовать сходство абстракций ?","answer":"механизм наследования;"},{"question":"Одним из полезных правил объектного проектирования является закон Деметера, который утверждает: «Методы любого класса не должны зависеть от структуры других классов, а только от структуры своего верхнего уровня. В каждом методе посылаются сообщения только объектам из предельно ограниченного множества классов». Следование этому закону позволяет:","answer":"создавать слабо зацепленные классы системы, реализация которых скрыта;"},{"question":"Какой тип отношения должен быть у класса Авто с классами Двигатель и Колесо ?","answer":"отношение  использования (зависимости);"},{"question":"Поведение объекта характеризуется изменениями его состояния в процессе взаимодействия с другими объектами системы посредством:","answer":"передачи сообщений между объектами из ограниченного множества классов;"},{"question":"Из  всех возможных способов совершенствования процесса разработки программного обеспечения наибольшее  преимущество имеет: ","answer":"формулирование  требований;"},{"question":"На основе вариантов использования разработчики:","answer":"формируют задачи проектирования;"},{"question":"Условия или возможности, необходимые пользователю для решения проблем или достижения целей – это:","answer":"формулировка требований  к системе, в соответствии со стандартом  IEEE;"},{"question":"Уровень функциональных требований определяет:","answer":"функциональность программного обеспечения, которую разработчики должны реализовать для пользователей;"},{"question":"Требования предметной области – это:","answer":"требования, которые характеризуют предметную область, где будет эксплуатироваться система;"},{"question":"Нефункциональные требования описывают:","answer":"характеристики системы и её окружение, а не поведение системы;"},{"question":"Ошибка, допущенная в функциональных требованиях, может снизить качество системы, а ошибка в нефункциональных требованиях может:","answer":"сделать систему неработоспособной;"},{"question":"Требование: «Стандартный пользовательский интерфейс, предоставляющий  доступ  ко всем базам данных»,  должен  основываться   на  стандарте  о  правах покупателя»,  относится к:","answer":"требованию  предметной области;"},{"question":"Спецификация  системных требований может строиться на основе:","answer":"различных системных моделей, таких, как объектная модель или модели потоков данных и модели бизнес-процессов;"},{"question":"Какой набор способов не является способом организации системных требований ?","answer":"по классификации характерных свойств системы и их комбинациям;"},{"question":"Большим преимуществом организации системных требований по классам, при проектировании, является:","answer":"поддержка жесткого соответствия между требованиями, проектом и реализацией;"},{"question":"Варианты использования – это:","answer":"методика формирования требований к системе, основанная на сценариях;"},{"question":"Какой из типов проверок (аттестации) документации требований не является обязательным ?","answer":"проверка понимания потребностей пользователей; "},{"question":"Техника описания вариантов использования основана на:","answer":"описании  сценариев работы системы;"},{"question":"Любое приложение взаимодействует с пользователем с помощью объектов управления интерфейса, которые:","answer":"реализуют сеанс взаимодействия (сеанс обслуживания);"},{"question":"Процесс уточнения модели требований сводится к выявлению одинаковых частей в вариантах использования системы, и извлечения этих частей в отдельный вариант использования. Какое отношение на диаграмме вариантов использования применяется в этом случае ?","answer":"«include»;"},{"question":"В каком случае не применяется расширяющийся вариант использования ? ","answer":"для моделирования классов вариантов использования;"},{"question":"Диаграммы  вариантов  использования  служат для:","answer":"показа набора вариантов  использования  в системе некоторых действующих лиц  и отношений  между  этими компонентами;"},{"question":"Динамические модели объектно-ориентированных программных систем обеспечивают:","answer":"представление  поведения систем;"},{"question":"Для визуализации модели поведения системы существуют:","answer":"диаграммы вариантов использования, диаграммы взаимодействия и диаграммы деятельности;"},{"question":"Диаграмма последовательности – это:","answer":"упорядоченная по времени диаграмма взаимодействия, описывающая один из потоков варианта использования;"},{"question":"Объектно-ориентированный стиль анализа, проектирования и разработки систем предназначен  для:","answer":"работы  с  большим количеством небольших объектов, обладающих множеством небольших методов, что дает широкие возможности для переопределения и изменения;"},{"question":"Диаграммы состояний  применяются  для:","answer":"описания поведения одного объекта в нескольких вариантах использования;"},{"question":"Диаграмма деятельности – это:","answer":"технология, позволяющая описывать логику процедур, бизнес – процессы и потоки работ;"},{"question":"Исходной информацией  в процессе ICONIX  являются представления о том,  что должна делать система в виде:","answer":"прототипа GUI и некоторых выявленных сценариев или моделей вариантов использования;"},{"question":"Анализ пригодности (предварительное проектирование) – незаменимое средство для осуществления перехода  между:","answer":"требованиями и проектом;"},{"question":"Цель  анализа  пригодности (предварительного проектирования)  процесса  ICONIX  заключается  в:","answer":"выявлении  объектов системы и в распределении поведения по этим  объектам;"},{"question":"Граничные объекты (boundary) – это объекты:","answer":"с помощью  которых  действующие лица (акторы) ведут диалог при  взаимодействии с системой;"},{"question":"Программный компонент системы – это:","answer":"физический фрагмент реализации системы, который заключает в себе программный код (исходный, двоичный, исполняемый), сценарные описания или наборы команд операционной системы;"},{"question":"Тестирование  программного  обеспечения – это:","answer":"запуск исполняемого кода с тестовыми данными и исследование выходных данных и  рабочих характеристик  для проверки правильности системы; "},{"question":"Исключительную важность для успеха проекта имеет документ-концепция, в котором:","answer":"представлены высокоуровневые потребности пользователя и функции приложения;"},{"question":"Произвольный номер,  который уникальным образом определяет запись в сущности – это:","answer":"суррогатный ключ;"},{"question":"Потенциальный ключ, не ставший первичным – это:","answer":"альтернативный ключ;"},{"question":"Формирование общего взгляда на систему для ее дальнейшей детализации в методологии IDEF1X  является целью: ","answer":"диаграммы сущность-связь (Entity Relationship Diagram, ERD).       "},{"question":"Детализация модели сущность-связь в методологии IDEF1X является целью: ","answer":"модели  данных, основанной на ключах (Key Based model, KB);"},{"question":"Отношение, при котором  объект  специализированного  элемента (потомок) может  быть  подставлен  вместо обобщенного элемента (предка или родителя) - это:","answer":"обобщение;"},{"question":"Пояснительные части модели  на языке UML - это:","answer":"аннотационные  сущности;"},{"question":"Статические  составляющие  на языке UML - это:","answer":"структурные сущности;"},{"question":"Динамические составляющие  на языке UML - это:","answer":"поведенческие  сущности; "},{"question":"Физически  заменяемая часть системы, которая  соответствует  некоторому набору логических элементов и обеспечивает их реализацию – это:","answer":"компонент;"},{"question":"Совокупность ролей и других элементов, которые, работая совместно,  производят  некоторый  кооперативный  эффект - это:","answer":"кооперация;"},{"question":"Отношение, добавляющее поведение к исходному варианту использования – это:","answer":"расширение;"},{"question":"Совокупность  операций, которые определяют сервис (набор услуг), предоставляемый классом или компонентом – это:","answer":"интерфейс;"},{"question":"Структурное отношение между классами – это:","answer":"ассоциация;"},{"question":"Семантическое отношение между двумя сущностями, при котором изменение одной из них, независимой, может повлиять на семантику другой, зависимой – это:","answer":"зависимость;"},{"question":"Форма агрегирования, в которой целое владеет своими частями, имеющими одинаковое время жизни – это:","answer":"композиция; "},{"question":"Имена существительные в моделях на языке UML – это:","answer":"структурные сущности;"},{"question":"Описание совокупности объектов с общими атрибутами, операциями, отношениями и семантикой – это:","answer":"класс;"},{"question":"Отношение вариантов использования, в котором один вариант использования добавляется  внутрь  последовательности  поведения другого варианта  использования – это:","answer":"включение;  "},{"question":"Описание  последовательности  выполняемых  системой  действий, которая производит  наблюдаемый  результат, значимый для какого-либо  актера – это:","answer":"вариант  использования;"},{"question":"Инструмент объектно-ориентированного анализа и проектирования – это:","answer":"Rational Rose;"},{"question":"Семантическое отношение между классификаторами, при котором один классификатор  определяет  «контракт», а  другой  гарантирует  его выполнение – это:","answer":"реализация;"},{"question":"Форма  агрегирования,  в которой  целое владеет своими частями – это:","answer":"агрегация;"},{"question":"Специальный вид ассоциации, описывающий отношение между агрегатом (целым) и компонентом (частью) – это:","answer":"агрегация;  "},{"question":"Назовите основные понятия объектно-ориентированного подхода.","answer":"наследование, полиморфизм, инкапсуляция, объект;"},{"question":"Какие принципы не используются при построении общей модели в Rational Rose?","answer":"видимость;   "},{"question":"Назовите основные стереотипы классов анализа  в нотации UML:","answer":"Boundary (граница), Entity (сущность), Control (управление); "},{"question":"Назовите модели и диаграммы  Rational Rose:","answer":"диаграммы вариантов использования, диаграммы классов, диаграммы состояний;"},{"question":"Какие типы связей поддерживаются в диаграммах вариантов использования ?","answer":"использования, расширения, обобщения;"},{"question":"Назовите основные элементы  класса  в нотации UML:","answer":"имя класса, атрибуты и операции класса;"},{"question":"Назовите основные типы классов анализа:","answer":"пограничный  класс, класс - сущности, управляющий  класс;"},{"question":"Назовите основные элементы диаграммы последовательности в нотации UML:","answer":"объекты, сообщения, линия жизни, фокус управления, сообщения;"},{"question":"Конструирование программного обеспечения – это:","answer":"создание работающего программного обеспечения с привлечением методов верификации, кодирования и тестирования программ;  "},{"question":"Уменьшение сложности в конструировании программного обеспечения  достигается при:","answer":"создании   простого   и легко читаемого кода для придания большей значимости этого кода, простоте тестирования, производительности и удовлетворению заданным критериям; "},{"question":"Одним из важнейших инструментов проектирования архитектуры  является паттерн – типовой конструктивный элемент программного обеспечения. Что задает паттерн?","answer":"паттерн задает взаимодействие объектов (компонентов) проектируемой системы, а также  роли и ответственности исполнителей;  "},{"question":"Тестирование программного обеспечения – это:","answer":"процесс проверки готовой программы в статике и в динамике, путем прогона конечного набора корректных и не корректных тестовых данных; "},{"question":"Что такое сопровождение программного обеспечения?","answer":"Сопровождение программного обеспечения – это совокупность действий по обеспечению работы программного обеспечения, а также, по внесению  изменений в случае обнаружения ошибок в процессе эксплуатации и  по адаптации программного обеспечения к новой среде функционирования;"},{"question":"На что делает акцент инженерия программирования?","answer":"на принципы, методы и подходы к управлению проектом, конфигурацией и качеством программного обеспечения;"},{"question":"Программное обеспечение - это?","answer":"компьютерные программы  и соответствующая документация;"},{"question":"Объектно-ориентированный подход к разработке систем ориентирован  в большей степени  на:","answer":"данные;"},{"question":"Объект обладает:","answer":"состоянием, поведением и идентичностью;"},{"question":"Сообщение,  посылаемое  исходным объектом целевому объекту, является:","answer":"именем операции класса целевого объекта; "},{"question":"В сценариях взаимодействия объектов выделяются объекты-клиенты и объекты - сервера. Укажите невозможные виды операций объекта-клиента  над  объектом-сервером? ","answer":"конструктор и деструктор;"},{"question":"Объект, являющийся атрибутом другого объекта, имеет связь со своим агрегатом:","answer":"по значению;"},{"question":"Отношение «композиция» между классами - это:","answer":"когда целое физически содержит часть;"},{"question":"Какое отношение должно быть между классами «Многоугольник»  и  «Вершина», при котором изменения многоугольника  влекут за собой изменения вершин этого многоугольника.","answer":"агрегация;"},{"question":"Свойства класса представляют собой единое понятие, воплощающееся:","answer":"в атрибутах и в ассоциациях;"},{"question":"Если класс определяет типы  атрибутов, то объекты содержат:","answer":"значения атрибутов;"},{"question":"Какая из представленных характеристик атрибута класса снимает ограничения на модификацию значения атрибута? ","answer":"changeable;"},{"question":"Значительная часть информации, которую можно указать в атрибуте класса, появляется:","answer":"в ассоциациях;"},{"question":"Ролевые имена на ассоциативной связи между целевым и исходным классами используются:","answer":"для перемещения к объекту целевого класса из исходного;"},{"question":"Для улучшения понимания при взаимодействии двух классов, часто используются следующие имена: «has»(иметь),  «is related to»(связан с), «is part of»(является частью). С каким типом отношения между классами используются перечисленные имена?  ","answer":"ассоциация;"},{"question":"Программная инженерия?","answer":"дисциплина, изучающая применение строгого систематического количественного подхода к разработке, эксплуатации и сопровождению программного обеспечения;"},{"question":"Построение SADT-модели включает в себя выполнение следующих действий?","answer":"определение цели и точки зрения модели, построение, обобщение и декомпозиция диаграмм;"},{"question":"Моделирование основывается на принципах?","answer":"выбор модели оказывает определяющее влияние на подход к решению проблемы и на то, как будет выглядеть это решение;"},{"question":"В бизнес-процессах выделяют классы процессов?","answer":"обеспечивающие бизнес-процессы;"},{"question":"CASE-средства классифицируются по следующим признакам?","answer":"по применяемым методологиям и моделям систем и БД;"},{"question":"К малым интегрированным средствам моделирования относятся?","answer":"BPwin;"},{"question":"К средним интегрированным средствам моделирования относятся?","answer":"Design/IDEF;"},{"question":"Объектно-ориентированная методология (ООМ) включает в себя составные части?","answer":"объектно-ориентированный анализ;"},{"question":"К одному из основных понятий объектно-ориентированного подхода относится?","answer":"полиморфизм;"},{"question":"Одним из главных принципов объектного подхода является?","answer":"абстрагирование;"},{"question":"Дополнительный  принцип  объектного подхода?","answer":"типизация;"},{"question":"К инструментальным средствам объектно-ориентированного анализа и проектирования относится?","answer":"Rational Rose;"},{"question":"К инструментальным средствам представления функциональных моделей  относится?","answer":"Model Mart;"},{"question":"Язык UML – это?","answer":"язык для визуализации, специфицирования, конструирования и документирования артефактов программных систем;"},{"question":"Моделирование в UML позволяет решать задачу?","answer":"визуализации системы в ее текущем или желательном для нас состоянии;"},{"question":"Словарь UML включает строительные блоки?","answer":"сущности;"},{"question":"UML, как язык документирования, помимо исполняемого кода производит и другие продукты, включающие?","answer":"дизайн, исходный код, проектные планы;"},{"question":"UML включает синтаксические и семантические правила для?","answer":"имен, областей действия;"},{"question":"Применение языка UML существенно упрощает последовательное использование  механизмов?","answer":"спецификации, дополнения;"},{"question":"Механизмы расширения UML включают?","answer":"стереотипы;"},{"question":"Язык UML предназначен для?","answer":"конструирования, документирования;"},{"question":"В объектно-ориентированном моделировании между классами существуют  типы связей?","answer":"зависимость;"},{"question":"В состав графического представления класса в языке UML входят части?","answer":"операции;"},{"question":"Программное обеспечение делится на классы?","answer":"системное ПО, прикладное ПО и инструментальные средства разработки программ;"},{"question":"Инструментальные средства разработки программ – это?","answer":" программное обеспечение, предназначенное для разработки и отладки новых  программ;"},{"question":"Аппаратные инструментальные средства разработки ПО – это?","answer":"устройства вычислительной системы, специально предназначенные для поддержки разработки ПО;"},{"question":"Программные инструментальные средства разработки ПО – это?","answer":"программы, позволяющие выполнить все работы, определенные  методологией проектирования ПО;"},{"question":"К этапам развития технологии разработки программного обеспечения относятся?","answer":"компонентный подход и CASE-технологии;"},{"question":"\"Стихийное» программирование\"?","answer":"характеризуется тем, что типичная программа этого периода состояла из основной программы, области глобальных данных и набора подпрограмм (в основном библиотечных), выполняющих обработку всех данных или их части;"},{"question":"Структурный подход к программированию – это?","answer":"совокупность рекомендуемых технологических приемов, охватывающих выполнение всех этапов разработки программного обеспечения;"},{"question":"Объектный подход к программированию – это?","answer":"технология создания сложного программного обеспечения, основанная на представлении программы в виде совокупности объектов, каждый из которых является экземпляром определенного типа (класса), а классы образуют иерархию с наследованием свойств;"},{"question":"Компонентный подход?","answer":"предполагает взаимодействие между компонентами через стандартизованные двоичные интерфейсы и позволяет использовать исполняемые файлы в любом языке программирования, поддерживающем соответствующую технологию;"},{"question":"Управление требованиями?","answer":"процесс систематического выявления, организации и документирования требований к сложной системе;"},{"question":"К методам выявления требований относятся?","answer":"интервьюирование и анкетирование, мозговой штурм и отбор идей;"},{"question":"Требования к разрабатываемой системе должны включать?","answer":"совокупность условий, при которых предполагается эксплуатировать  будущую систему (аппаратные и программные ресурсы, предоставляемые системе; внешние условия ее функционирования; состав людей и работ, имеющих к ней отношение);"},{"question":"Типы средств, иллюстрирующие цели моделирования системы?","answer":"функции, которые система должна выполнять;"},{"question":"Преимущества объектно-ориентированного подхода?","answer":"восприимчивость к изменениям;"},{"question":"Требования – это?","answer":"некоторое свойство программного обеспечения, необходимое пользователю для решения проблемы при достижении поставленной цели;"},{"question":"Типичная схема процесса анализа С-требований включает в себя?","answer":"идентификацию заказчика и проведение интервью с представителями заказчика;"},{"question":"В классификацию требований к программной системе входят?","answer":"требования предметной области;"},{"question":"Процесс определения и анализа требований включает в себя?","answer":"анализ предметной области, сбор и классификацию требований;"},{"question":"Опорные точки зрения конечных пользователей системы программного обеспечения можно трактовать как?","answer":"источник информации о системных данных;"},{"question":"При аттестации требований выполняются следующие типы проверок документации требований?","answer":"проверка на полноту и на выполнимость;"},{"question":"К методам аттестации требований относится?","answer":"обзор требований;"},{"question":"Уровни организационного управления при планировании разработки системы?","answer":"оперативный;"},{"question":"Для различных представлений проектируемой системы используют типы моделей?","answer":"модель классов;"},{"question":"Классификация бизнес-процессов включает следующие классы процессов?","answer":"бизнес-процессы управления;"},{"question":"Типы D-требований?","answer":"обратные требования;"},{"question":"Возможные способы организации D-требований?","answer":"по вариантам использования;"},{"question":"К моделированию относится?","answer":"совокупность графических объектов;"},{"question":"Принципы разработки эффективного пользовательского интерфейса?","answer":"видимость, обратная связь;"},{"question":"Принципы разработки программного обеспечения?","answer":"командный процесс разработки;"},{"question":"Типы интерфейсных требований?","answer":"программные и коммуникационные требования;"},{"question":"Технология проектирования определяется как совокупность составляющих?","answer":"нотаций;"},{"question":"Разработка и сопровождение ИС в конкретной организации и конкретном проекте должна поддерживаться?","answer":"стандарта оформления проектной документации;"},{"question":"Результатами проектирования архитектуры являются?","answer":"модель пользовательского интерфейса;"},{"question":"Какие работы включает процесс разработки программного обеспечения?","answer":"программирование, сборка, тестирование;"},{"question":"Какие технологии разработки программ используются в современном программировании?","answer":"событийные;"},{"question":"Объектно-ориентированное проектирование использует инструментальные средства?","answer":"Rational Rose;"},{"question":"IEEE – это?","answer":"институт инженеров радиоэлектроники и электротехники;"},{"question":"Ядро знаний SWEBOK – это?","answer":"основополагающий научно-технический документ, который отображает мнение специалистов в области программной инженерии;"},{"question":"Каждая область ядра знаний SWEBOK представляется?","answer":"определением понятийного аппарата, методов и средств программной инженерии;"},{"question":"К основным областям знаний SWEBOK относятся?","answer":"инженерия требований, проектирование ПО;"},{"question":"К организационным областям знаний SWEBOK относится?","answer":"управление конфигурацией, управление проектами;"},{"question":"В рамках Rational Unified Process (RUP) набор действий по разработке программ  включает этапы?","answer":"тестирование, внедрение;"},{"question":"Этапы разработки консалтинговых проектов включают в себя?","answer":"проведение обследования деятельности предприятия;"},{"question":"Use Case – это?","answer":"завершенное и понятное пользователю применение системы;"},{"question":"Методы, указывающие уровни качества?","answer":"формальные методы;"},{"question":"Контекстная диаграмма показывает?","answer":"общее описание системы;"},{"question":"Основные стереотипы класса в нотации UML?","answer":"вoundary (граница);"},{"question":"Стереотипы сообщений диаграммы последовательности в нотации UML?","answer":"«Call» (вызвать), «Return» (возвратить);"},{"question":"Диаграмма состояний отображает?","answer":"автомат состояний;"},{"question":"Разветвление и слияние?","answer":"одни и те же данные или объекты, порожденные одной работой, могут использоваться сразу в нескольких других работах;"},{"question":"Логическое представление – это?","answer":"классы, диаграммы классов;"},{"question":"На этапе анализа требований ЖЦ ПО определяются?","answer":"архитектура системы, ее функции, внешние условия, распределение функций между аппаратурой и ПО;"},{"question":"Преимущества спиральной модели?","answer":"ориентация на развитие и модификацию ПО в процессе его проектирования;"},{"question":"Основные процессы жизненного цикла программного обеспечения?","answer":"сопровождение;"},{"question":"Вспомогательные процессы жизненного цикла программного обеспечения?","answer":"обеспечение качества, верификация, аттестация, совместный анализ;"},{"question":"Организационные процессы жизненного цикла программного обеспечения?","answer":"управление, создание инфраструктуры;"},{"question":" Структура ЖЦ ПО стандарта ISO/IEC 12207 базируется на группах процессов?","answer":"основные процессы ЖЦ ПО;"},{"question":"Модели жизненного цикла ПО?","answer":"спиральная модель;"},{"question":"Жизненный цикл ПО методологии RAD состоит из фаз?","answer":"анализа и планирования требований;"},{"question":"Модель ЖЦ ПО включает в себя?","answer":"ключевые события – точки завершения работ и принятия решений;"},{"question":"Основные принципы создания информационных систем?","answer":"организационные;"},{"question":" Управленческие принципы создания информационных систем включают принципы?","answer":"системности;"},{"question":"Модели, дающие полное описание системы?","answer":"модель классов;"},{"question":"Виды диаграмм, с помощью которых описывается модель взаимодействия?","answer":"диаграмма вариантов использования;"},{"question":"Строительные блоки UML?","answer":"сущность;"},{"question":"Типы сущностей UML?","answer":"аннотационные и группирующие;"},{"question":"Типы отношений, используемые в UML?","answer":"реализация и ассоциация;"},{"question":"Типы диаграмм, используемые в UML?","answer":"диаграмма вариантов использования, диаграмма последовательности,  диаграмма кооперации;"},{"question":"Общие механизмы языка UML?","answer":"механизмы расширения;"},{"question":"Механизмы расширения UML?","answer":"стереотипы;"},{"question":"Языки обозначений, не входящие в язык UML?","answer":"графики;"},{"question":"Тип основных элементов, использующихся для построения концептуальной модели UML?","answer":"базовые строительные блоки;"},{"question":"Разновидности структурных сущностей?","answer":"интерфейс;"},{"question":"Диаграмма классов показывает?","answer":"объекты и кооперации;"},{"question":"Хорошо сформулированные модели в языке UML?","answer":"управляются вариантами использования;"},{"question":"Классы описывают собой совокупности объектов с общими?","answer":"отношениями и семантикой;"},{"question":"Атрибут – это?","answer":"именованное свойство класса;"}]